<?xml version="1.0" encoding="utf-8"?>
<FrameLayout
    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
    android:layout_height="match_parent">



    <RelativeLayout
        android:layout_width="300dp"
        android:layout_height="620dp"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="25dp"
        android:id="@+id/licence">
        <ScrollView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            
            android:textSize="20sp"
            android:text="Using the service, you can apply a flexible licensing policy on an application-by-application basisâ€”each application can enforce licensing in the way most appropriate for it. If necessary, an application can apply custom constraints based on the licensing status obtained from Google Play. For example, an application can check the licensing status and then apply custom constraints that allow the user to run it unlicensed for a specific validity period. An application can also restrict use of the application to a specific device, in addition to any other constraints.

The licensing service is a secure means of controlling access to your applications. When an application checks the licensing status, the Google Play server signs the licensing status response using a key pair that is uniquely associated with the application. Although it's possible for your application to store the public key in its compiled .apk file, it's much safer to verify the licensing status response on a server that you trust.

Any application that you publish through Google Play can use the Google Play Licensing service. No special account or registration is needed. Additionally, because the service uses no dedicated framework APIs, you can add licensing to any application that uses a minimum API level of 3 or higher."/>
        </ScrollView>

    </RelativeLayout>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="650dp"
        android:layout_marginLeft="125dp"
        android:id="@+id/button"
        android:text="Dismiss"/>

</FrameLayout>